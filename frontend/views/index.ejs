<% const nextStatus = { receive: "making", making: "deliver", deliver: "done" }; %>
<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dashboard Dapur - Infinity Cafe</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .card { @apply p-4 border-4 border-black bg-white font-mono font-bold uppercase relative shadow-[6px_6px_0_#000]; }
    .btn-close { @apply absolute top-2 right-2 text-red-600 font-bold text-lg bg-white border-2 border-black rounded-full w-6 h-6 flex items-center justify-center; }
    .tab-banner { @apply px-6 py-3 border-4 border-black font-extrabold uppercase text-center cursor-pointer shadow-[4px_4px_0_#000]; }
    .tab-banner-active { background-color: #fff; color: #000; }
    .tab-banner-inactive { background-color: #1f2937; color: #fff; }
    .btn-action { @apply mt-2 w-full bg-white border-4 border-black text-black font-extrabold uppercase px-4 py-2 shadow-[4px_4px_0_#000] hover:bg-black hover:text-yellow-300; }
  </style>
</head>
<body class="bg-white p-6 font-mono">
  <header class="mb-6">
    <h1 class="text-3xl font-extrabold uppercase text-center bg-yellow-300 border-b-4 border-black shadow mb-4">📋 Dashboard Dapur</h1>
    <div class="grid grid-cols-2 gap-4">
      <div id="tab-active" class="tab-banner tab-banner-active" onclick="switchTab('active')">🟢 Aktif</div>
      <div id="tab-inactive" class="tab-banner tab-banner-inactive" onclick="switchTab('inactive')">✅ Selesai</div>
    </div>
  </header>

  <main>
    <!-- ACTIVE ORDERS -->
    <div id="active-orders" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
      <% orders.filter(o => ["receive","making","deliver"].includes(o.status)).forEach(o => { %>
        <div class="card <%= o.status === 'receive' ? 'bg-yellow-100' : o.status === 'making' ? 'bg-blue-100' : 'bg-green-100' %>" onclick='openDetailModal(<%- JSON.stringify(o) %>)'>
          <div class="flex justify-between items-center border-b-2 border-black mb-2 px-2 py-1 bg-yellow-300">
            👤 <%= o.customer_name || '-' %>
            <button class="btn-close" onclick="event.stopPropagation(); openConfirmModal('<%= o.order_id %>')">&times;</button>
          </div>
          <div class="text-sm">#<%= o.order_id %></div>
          <div class="text-xs text-gray-500">🕒 <%= new Date(o.time_receive).toLocaleString("id-ID") %></div>
          <div class="text-xs">🏠 <%= o.room_name || '-' %></div>
          <div class="font-bold text-lg mt-1"><%= o.detail %></div>
          <div class="text-xs mt-1">Status: <%= o.status %></div>
          <% if (o.time_done) { %>
            <div class="text-xs mt-1 text-gray-600">📅 Selesai: <%= new Date(o.time_done).toLocaleString("id-ID") %></div>
          <% } %>
          <button class="btn-action" onclick="event.stopPropagation(); syncUpdate('<%= o.order_id %>', '<%= nextStatus[o.status] %>')">➡️ <%= nextStatus[o.status] %></button>
        </div>
      <% }) %>
    </div>

    <!-- INACTIVE ORDERS -->
    <div id="inactive-orders" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 hidden mt-6">
      <% orders.filter(o => !["receive","making","deliver"].includes(o.status)).forEach(o => { %>
        <div class="card <%= o.status === 'done' ? 'bg-gray-200' : o.status === 'cancel' ? 'bg-red-100' : 'bg-orange-100' %>" onclick='openDetailModal(<%- JSON.stringify(o) %>)'>
          <div class="flex justify-between items-center border-b-2 border-black mb-2 px-2 py-1 bg-yellow-300">
            👤 <%= o.customer_name || '-' %>
          </div>
          <div class="text-sm">#<%= o.order_id %></div>
          <div class="text-xs text-gray-500">🕒 <%= new Date(o.time_receive).toLocaleString("id-ID") %></div>
          <div class="text-xs">🏠 <%= o.room_name || '-' %></div>
          <div class="font-bold text-lg mt-1"><%= o.detail %></div>
          <div class="text-xs mt-1">Status: <%= o.status %></div>
          <% if (o.time_done) { %>
            <div class="text-xs mt-1 text-gray-600">📅 Selesai: <%= new Date(o.time_done).toLocaleString("id-ID") %></div>
          <% } %>
        </div>
      <% }) %>
    </div>
  </main>

  <!-- Sound -->
  <audio id="sound-new-order" src="https://www.myinstants.com/media/sounds/mario-coin.mp3" preload="auto"></audio>
  <audio id="sound-status-update" src="https://www.myinstants.com/media/sounds/smw_1-up.mp3" preload="auto"></audio>

  <!-- Confirm Modal -->
  <div id="confirm-modal" class="fixed inset-0 bg-black bg-opacity-70 z-50 hidden items-center justify-center">
    <div class="bg-white border-4 border-black p-6 rounded-lg shadow max-w-md w-full relative">
      <button onclick="closeConfirmModal()" class="btn-close">&times;</button>
      <h3 class="text-xl font-bold mb-3">Konfirmasi Pembatalan</h3>
      <p class="mb-4">Pilih alasan pembatalan atau kehabisan bahan.</p>
      <div class="flex justify-end gap-2">
        <button onclick="confirmCancel('cancel')" class="bg-red-600 text-white font-bold px-4 py-2 rounded shadow">Batal</button>
        <button onclick="confirmCancel('habis')" class="bg-gray-800 text-white font-bold px-4 py-2 rounded shadow">Habis</button>
      </div>
    </div>
  </div>

  <!-- Detail Modal -->
  <div id="detail-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 hidden items-center justify-center">
    <div class="bg-white border-4 border-black p-6 rounded-lg max-w-md w-full font-mono relative">
      <button onclick="closeDetailModal()" class="btn-close">&times;</button>
      <h3 class="text-lg font-bold mb-2">📦 Detail Pesanan</h3>
      <div id="detail-content" class="text-sm space-y-1"></div>
    </div>
  </div>

  <!-- Script -->
  <script>
    const statusColors = {
      receive: "bg-yellow-100",
      making: "bg-blue-100",
      deliver: "bg-green-100",
      done: "bg-gray-200",
      cancel: "bg-red-100",
      habis: "bg-orange-100"
    };
    let selectedOrderId = null;
    let selectedOrder = null;

    function switchTab(view) {
      document.getElementById("active-orders").classList.toggle("hidden", view !== "active");
      document.getElementById("inactive-orders").classList.toggle("hidden", view !== "inactive");
      document.getElementById("tab-active").classList.toggle("tab-banner-active", view === "active");
      document.getElementById("tab-inactive").classList.toggle("tab-banner-active", view === "inactive");
      document.getElementById("tab-active").classList.toggle("tab-banner-inactive", view !== "active");
      document.getElementById("tab-inactive").classList.toggle("tab-banner-inactive", view !== "inactive");
    }

    function openConfirmModal(orderId) {
      selectedOrderId = orderId;
      document.getElementById("confirm-modal").classList.remove("hidden");
    }

    function closeConfirmModal() {
      selectedOrderId = null;
      document.getElementById("confirm-modal").classList.add("hidden");
    }

    function openDetailModal(order) {
      selectedOrder = order;
      const box = document.getElementById("detail-content");
      box.innerHTML = `
        <p><strong>Order ID:</strong> ${order.order_id}</p>
        <p><strong>Nama:</strong> ${order.customer_name}</p>
        <p><strong>Ruangan:</strong> ${order.room_name}</p>
        <p><strong>Status:</strong> ${order.status}</p>
        <p><strong>Waktu:</strong> ${new Date(order.time_receive).toLocaleString("id-ID")}</p>
        ${order.time_done ? `<p><strong>Selesai:</strong> ${new Date(order.time_done).toLocaleString("id-ID")}</p>` : ""}
        <p><strong>Detail:</strong><br>${order.detail}</p>
      `;
      document.getElementById("detail-modal").classList.remove("hidden");
    }

    function closeDetailModal() {
      selectedOrder = null;
      document.getElementById("detail-modal").classList.add("hidden");
    }

    async function confirmCancel(status) {
      const reason = status === "cancel" ? prompt("Masukkan alasan pembatalan:", "Tidak jadi") : "Bahan habis";
      if (!reason) return closeConfirmModal();
      await syncUpdate(selectedOrderId, status, reason);
      closeConfirmModal();
    }

    async function syncUpdate(orderId, status, reason = "") {
      try {
        await fetch(`/kitchen/update_status/${orderId}?status=${status}&reason=${encodeURIComponent(reason)}`, { method: "POST" });
        document.getElementById("sound-status-update").play().catch(() => {});
        window.location.reload();
        logHistory(orderId, status, reason);
      } catch (err) {
        alert("Gagal update status ke kitchen/order service");
      }
    }

    function logHistory(orderId, status, reason = "") {
      console.log(`[LOG] Order ${orderId} → Status: ${status} ${reason ? "| Alasan: " + reason : ""}`);
    }

    function renderOrders(orders) {
      const nextStatus = { receive: "making", making: "deliver", deliver: "done" };
      const activeEl = document.getElementById("active-orders");
      const inactiveEl = document.getElementById("inactive-orders");

      activeEl.innerHTML = "";
      inactiveEl.innerHTML = "";

      for (const o of orders) {
        const card = document.createElement("div");
        card.className = `card ${statusColors[o.status] || 'bg-white'}`;
        card.onclick = () => openDetailModal(o);
        card.innerHTML = `
          <div class="flex justify-between items-center border-b-2 border-black mb-2 px-2 py-1 bg-yellow-300">
            👤 ${o.customer_name || '-'}
            ${["receive", "making", "deliver"].includes(o.status) ? 
              `<button class="btn-close" onclick="event.stopPropagation(); openConfirmModal('${o.order_id}')">&times;</button>` : ""}
          </div>
          <div class="text-sm">#${o.order_id}</div>
          <div class="text-xs text-gray-500">🕒 ${new Date(o.time_receive).toLocaleString("id-ID")}</div>
          <div class="text-xs">🏠 ${o.room_name || '-'}</div>
          <div class="font-bold text-lg mt-1">${o.detail}</div>
          <div class="text-xs mt-1">Status: ${o.status}</div>
          ${o.time_done ? `<div class="text-xs mt-1 text-gray-600">📅 Selesai: ${new Date(o.time_done).toLocaleString("id-ID")}</div>` : ""}
          ${nextStatus[o.status] ? `<button class="btn-action" onclick="event.stopPropagation(); syncUpdate('${o.order_id}', '${nextStatus[o.status]}')">➡️ ${nextStatus[o.status]}</button>` : ""}
        `;

        if (["receive", "making", "deliver"].includes(o.status)) {
          activeEl.appendChild(card);
        } else {
          inactiveEl.appendChild(card);
        }
      }
    }


    async function fetchAndRenderOrders() {
      try {
        const res = await fetch('/kitchen/orders');
        const orders = await res.json();
        renderOrders(orders);
      } catch (e) {
        document.getElementById("offline-banner").classList.remove("hidden");
      }
    }

    setInterval(fetchAndRenderOrders, 10000);
    fetchAndRenderOrders();
    window.openConfirmModal = openConfirmModal;
    window.closeConfirmModal = closeConfirmModal;
    window.confirmCancel = confirmCancel;
    window.switchTab = switchTab;
    window.openDetailModal = openDetailModal;
    window.closeDetailModal = closeDetailModal;
    switchTab("active");
  </script>
</body>
</html>
